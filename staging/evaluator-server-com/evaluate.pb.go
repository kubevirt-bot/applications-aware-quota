// Code generated by protoc-gen-go. DO NOT EDIT.
// source: staging/evaluator-server-com/evaluate.proto

/*
Package label_sidecar_evaluate is a generated protocol buffer package.

It is generated from these files:

	staging/evaluator-server-com/evaluate.proto

It has these top-level messages:

	PodUsageRequest
	PodUsageResponse
	Error
	HealthCheckRequest
	HealthCheckResponse
	ResourceList
	Pod
*/
package label_sidecar_evaluate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Define messages
type PodUsageRequest struct {
	Pod       *Pod   `protobuf:"bytes,1,opt,name=pod" json:"pod,omitempty"`
	PodsState []*Pod `protobuf:"bytes,2,rep,name=podsState" json:"podsState,omitempty"`
}

func (m *PodUsageRequest) Reset()                    { *m = PodUsageRequest{} }
func (m *PodUsageRequest) String() string            { return proto.CompactTextString(m) }
func (*PodUsageRequest) ProtoMessage()               {}
func (*PodUsageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PodUsageRequest) GetPod() *Pod {
	if m != nil {
		return m.Pod
	}
	return nil
}

func (m *PodUsageRequest) GetPodsState() []*Pod {
	if m != nil {
		return m.PodsState
	}
	return nil
}

type PodUsageResponse struct {
	ResourceList *ResourceList `protobuf:"bytes,1,opt,name=resourceList" json:"resourceList,omitempty"`
	Match        bool          `protobuf:"varint,2,opt,name=match" json:"match,omitempty"`
	Error        *Error        `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *PodUsageResponse) Reset()                    { *m = PodUsageResponse{} }
func (m *PodUsageResponse) String() string            { return proto.CompactTextString(m) }
func (*PodUsageResponse) ProtoMessage()               {}
func (*PodUsageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PodUsageResponse) GetResourceList() *ResourceList {
	if m != nil {
		return m.ResourceList
	}
	return nil
}

func (m *PodUsageResponse) GetMatch() bool {
	if m != nil {
		return m.Match
	}
	return false
}

func (m *PodUsageResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	Error        bool   `protobuf:"varint,1,opt,name=error" json:"error,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *Error) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type HealthCheckRequest struct {
}

func (m *HealthCheckRequest) Reset()                    { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()               {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type HealthCheckResponse struct {
	Healthy bool `protobuf:"varint,1,opt,name=healthy" json:"healthy,omitempty"`
}

func (m *HealthCheckResponse) Reset()                    { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()               {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HealthCheckResponse) GetHealthy() bool {
	if m != nil {
		return m.Healthy
	}
	return false
}

type ResourceList struct {
	ResourceListJson []byte `protobuf:"bytes,1,opt,name=resourceListJson,proto3" json:"resourceListJson,omitempty"`
}

func (m *ResourceList) Reset()                    { *m = ResourceList{} }
func (m *ResourceList) String() string            { return proto.CompactTextString(m) }
func (*ResourceList) ProtoMessage()               {}
func (*ResourceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ResourceList) GetResourceListJson() []byte {
	if m != nil {
		return m.ResourceListJson
	}
	return nil
}

type Pod struct {
	PodJson []byte `protobuf:"bytes,1,opt,name=podJson,proto3" json:"podJson,omitempty"`
}

func (m *Pod) Reset()                    { *m = Pod{} }
func (m *Pod) String() string            { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()               {}
func (*Pod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Pod) GetPodJson() []byte {
	if m != nil {
		return m.PodJson
	}
	return nil
}

func init() {
	proto.RegisterType((*PodUsageRequest)(nil), "evaluate.PodUsageRequest")
	proto.RegisterType((*PodUsageResponse)(nil), "evaluate.PodUsageResponse")
	proto.RegisterType((*Error)(nil), "evaluate.Error")
	proto.RegisterType((*HealthCheckRequest)(nil), "evaluate.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "evaluate.HealthCheckResponse")
	proto.RegisterType((*ResourceList)(nil), "evaluate.ResourceList")
	proto.RegisterType((*Pod)(nil), "evaluate.Pod")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PodUsage service

type PodUsageClient interface {
	PodUsageFunc(ctx context.Context, in *PodUsageRequest, opts ...grpc.CallOption) (*PodUsageResponse, error)
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type podUsageClient struct {
	cc *grpc.ClientConn
}

func NewPodUsageClient(cc *grpc.ClientConn) PodUsageClient {
	return &podUsageClient{cc}
}

func (c *podUsageClient) PodUsageFunc(ctx context.Context, in *PodUsageRequest, opts ...grpc.CallOption) (*PodUsageResponse, error) {
	out := new(PodUsageResponse)
	err := grpc.Invoke(ctx, "/evaluate.PodUsage/PodUsageFunc", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *podUsageClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := grpc.Invoke(ctx, "/evaluate.PodUsage/HealthCheck", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PodUsage service

type PodUsageServer interface {
	PodUsageFunc(context.Context, *PodUsageRequest) (*PodUsageResponse, error)
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
}

func RegisterPodUsageServer(s *grpc.Server, srv PodUsageServer) {
	s.RegisterService(&_PodUsage_serviceDesc, srv)
}

func _PodUsage_PodUsageFunc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PodUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodUsageServer).PodUsageFunc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/evaluate.PodUsage/PodUsageFunc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodUsageServer).PodUsageFunc(ctx, req.(*PodUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PodUsage_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodUsageServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/evaluate.PodUsage/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodUsageServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PodUsage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "evaluate.PodUsage",
	HandlerType: (*PodUsageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PodUsageFunc",
			Handler:    _PodUsage_PodUsageFunc_Handler,
		},
		{
			MethodName: "HealthCheck",
			Handler:    _PodUsage_HealthCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staging/evaluator-server-com/evaluate.proto",
}

func init() { proto.RegisterFile("staging/evaluator-server-com/evaluate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xdd, 0x6a, 0xe2, 0x40,
	0x14, 0x26, 0x06, 0x77, 0xf5, 0x98, 0x45, 0x99, 0x15, 0xc9, 0xca, 0x2e, 0xca, 0xc0, 0x82, 0xac,
	0xa8, 0xe0, 0xde, 0x79, 0xb7, 0xbb, 0xb8, 0x14, 0x69, 0x41, 0xa6, 0xf4, 0xa6, 0x37, 0x65, 0x4c,
	0x0e, 0x46, 0x1a, 0x33, 0xe9, 0xcc, 0x44, 0xe8, 0x33, 0xf4, 0x19, 0xfa, 0xae, 0x25, 0x93, 0xc4,
	0x24, 0xd8, 0xde, 0xcd, 0xf7, 0x33, 0xdf, 0xc9, 0x77, 0x26, 0x30, 0x55, 0x9a, 0xef, 0x0f, 0xd1,
	0x7e, 0x81, 0x27, 0x1e, 0x26, 0x5c, 0x0b, 0x39, 0x53, 0x28, 0x4f, 0x28, 0x67, 0x9e, 0x38, 0x16,
	0x24, 0xce, 0x63, 0x29, 0xb4, 0x20, 0xad, 0x02, 0xd3, 0x07, 0xe8, 0x6e, 0x85, 0x7f, 0xa7, 0xf8,
	0x1e, 0x19, 0x3e, 0x25, 0xa8, 0x34, 0x19, 0x81, 0x1d, 0x0b, 0xdf, 0xb5, 0xc6, 0xd6, 0xa4, 0xb3,
	0xfc, 0x32, 0x3f, 0x5f, 0xdd, 0x0a, 0x9f, 0xa5, 0x0a, 0x99, 0x42, 0x3b, 0x16, 0xbe, 0xba, 0xd5,
	0x5c, 0xa3, 0xdb, 0x18, 0xdb, 0x97, 0xb6, 0x52, 0xa7, 0x2f, 0x16, 0xf4, 0xca, 0x09, 0x2a, 0x16,
	0x91, 0x42, 0xb2, 0x02, 0x47, 0xa2, 0x12, 0x89, 0xf4, 0xf0, 0xfa, 0xa0, 0x74, 0x3e, 0x6b, 0x50,
	0x86, 0xb0, 0x8a, 0xca, 0x6a, 0x5e, 0xd2, 0x87, 0xe6, 0x91, 0x6b, 0x2f, 0x70, 0x1b, 0x63, 0x6b,
	0xd2, 0x62, 0x19, 0x20, 0x3f, 0xa1, 0x89, 0x52, 0x0a, 0xe9, 0xda, 0x26, 0xaa, 0x5b, 0x46, 0xad,
	0x53, 0x9a, 0x65, 0x2a, 0xfd, 0x03, 0x4d, 0x83, 0xd3, 0x94, 0xcc, 0x6f, 0x65, 0x29, 0x06, 0x10,
	0x0a, 0x8e, 0x39, 0xdc, 0xa0, 0x4a, 0xbf, 0xd7, 0x8c, 0x68, 0xb3, 0x1a, 0x47, 0xfb, 0x40, 0xae,
	0x90, 0x87, 0x3a, 0xf8, 0x17, 0xa0, 0xf7, 0x98, 0x2f, 0x8d, 0x2e, 0xe0, 0x6b, 0x8d, 0xcd, 0x8b,
	0xba, 0xf0, 0x39, 0x30, 0xf4, 0x73, 0x3e, 0xa8, 0x80, 0x74, 0x05, 0x4e, 0xb5, 0x24, 0xf9, 0x05,
	0xbd, 0x6a, 0xcd, 0x8d, 0x12, 0x91, 0xb9, 0xe2, 0xb0, 0x0b, 0x9e, 0x8e, 0xc0, 0xde, 0x0a, 0x3f,
	0x0d, 0x8f, 0x85, 0x5f, 0x71, 0x16, 0x70, 0xf9, 0x6a, 0x41, 0xab, 0x58, 0x3a, 0x59, 0x83, 0x53,
	0x9c, 0xff, 0x27, 0x91, 0x47, 0xbe, 0xd5, 0xde, 0xaa, 0xfa, 0xf4, 0xc3, 0xe1, 0x7b, 0x52, 0x5e,
	0x65, 0x03, 0x9d, 0x4a, 0x43, 0xf2, 0xbd, 0xb4, 0x5e, 0xae, 0x63, 0xf8, 0xe3, 0x03, 0x35, 0xcb,
	0xfa, 0xeb, 0xde, 0x0f, 0x42, 0xbe, 0xc3, 0x70, 0xa6, 0x0e, 0x3e, 0x7a, 0x5c, 0x9e, 0xdd, 0xbb,
	0x4f, 0xe6, 0x07, 0xfd, 0xfd, 0x16, 0x00, 0x00, 0xff, 0xff, 0x20, 0xe6, 0xfe, 0x61, 0xcf, 0x02,
	0x00, 0x00,
}
